<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                             http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>pl.matsuo</groupId>
  <artifactId>accounting-webapp</artifactId>
  <packaging>war</packaging>

  <parent>
    <groupId>pl.matsuo</groupId>
    <artifactId>accounting-parent</artifactId>
    <version>1.0-SNAPSHOT</version>
  </parent>

  <dependencies>
    <dependency>
      <groupId>pl.matsuo</groupId>
      <artifactId>matsuo-webapp</artifactId>
      <type>war</type>
    </dependency>
    <dependency>
      <groupId>pl.matsuo</groupId>
      <artifactId>accounting-web</artifactId>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-maven-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <executions>
          <execution>
            <phase>test</phase>
            <goals>
              <goal>exploded</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>com.github.searls</groupId>
        <artifactId>jasmine-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>test</id>
            <goals>
              <goal>test</goal>
            </goals>
          </execution>

          <execution>
            <id>bdd</id>
            <goals>
              <goal>bdd</goal>
            </goals>
          </execution>
        </executions>

        <configuration>

          <!--
          where is your javascript - default is src/main/javascript
          below is a typical tomcat project

          src/main/webapp/js/
          -->
          <jsSrcDir>${project.basedir}</jsSrcDir>

          <!--
          an ordered list of filters to match script source files
          -->
          <sourceIncludes>
            <!--   add the ones you want first  -->
            <include>target/war/work/*/*/js/**/jquery.js</include>
            <include>target/war/work/*/*/js/**/angular.js</include>
            <include>target/war/work/*/*/js/**/underscore.js</include>
            <include>target/war/work/*/*/js/**/moment.js</include>
            <include>target/war/work/*/*/js/**/mousetrap.js</include>
            <include>target/war/work/*/*/js/**/general/backbone.js</include>
            <include>target/war/work/*/*/js/**/general/base-app-module.js</include>
            <!--   these are the defaults  -->
            <include>target/war/work/*/*/js/**/*.js</include>
            <include>src/main/webapp/js/**/*.js</include>
          </sourceIncludes>

          <!--
          an ordered list of filters to match script source files NOT to be included
          -->
          <sourceExcludes>
            <exclude>target/war/work/*/*/js/lib/util/toastr.js</exclude>
          </sourceExcludes>

          <!--
          where are your test script - default is src/test/javascript
          below is a typical tomcat project
          -->
          <jsTestSrcDir>${project.basedir}/src/test/javascript</jsTestSrcDir>

          <!--
          an ordered list of filters to match script spec files NOT to be included
          -->
          <specIncludes>
            <!--   add the ones you want first  -->
            <include>lib/angular-mocks.js</include>
            <include>lib/matsuo_test_base.js</include>
            <!--   these are the defaults  -->
            <include>unit/**/*.js</include>
          </specIncludes>

          <!--
          the port that the jasmine:bdd goal binds to
          -->
          <serverPort>8234</serverPort>

          <!--
          the type of browser HtmlUnit emulates when your specs run during the build
          possible other value: INTERNET_EXPLORER_6, INTERNET_EXPLORER_7, INTERNET_EXPLORER_8
          default: FIREFOX_3
          see HtmlUnit documentation to see if any have been added since
           -->
          <browserVersion>FIREFOX_17</browserVersion>

          <!--
          when true, failing specs break the build
          -->
          <haltOnFailure>true</haltOnFailure>

          <!--
          when spec execution exceeds the timeout (in seconds), the build fails
          -->
          <timeout>60</timeout>

          <!--
          the name of the generated JUnit XML report
          the plugin generates XML of the same brand JUnit does; this is handy for when your CI server is capable of aggregating these XML files (like Jenkins freestyle projects)
          -->
          <junitXmlReportFileName>TEST-jasmine.xml</junitXmlReportFileName>

          <!--
          True to increase HtmlUnit output and attempt reporting on specs even if a timeout occurred.
          -->
          <debug>false</debug>

          <!--
          Source encoding
          -->
          <sourceEncoding>utf-8</sourceEncoding>
        </configuration>
      </plugin>

      <plugin>
        <groupId>net.alchim31.maven</groupId>
        <artifactId>yuicompressor-maven-plugin</artifactId>

        <executions>
          <execution>
            <goals>
              <goal>compress</goal>
            </goals>
          </execution>
        </executions>

        <configuration>
          <nosuffix>true</nosuffix>
          <nomunge>true</nomunge>
          <excludes>
            <exclude>**/lib/**/*.js</exclude>
          </excludes>

          <aggregations>
            <aggregation>
              <insertNewLine>true</insertNewLine>
              <output>${project.build.directory}/${project.build.finalName}/js/packed.js</output>
              <inputDir>${project.build.directory}/${project.build.finalName}/js/</inputDir>

              <includes>
                <include>**/clinic/**/*.js</include>
                <include>**/directives/**/*.js</include>
                <include>**/general/**/*.js</include>
                <include>*.js</include>
              </includes>
            </aggregation>
          </aggregations>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
